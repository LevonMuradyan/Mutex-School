#include <iostream>
#include "hugeInt.hpp"

std::vector<std::vector<std::string> > addTestCases =
{
	{
		"12",
		"13",
		"25"
	},
	{
		"0",
		"0",
		"0"
	},
	{
		"0",
		"999",
		"999"
	},
	{
		"9999",
		"999",
		"10998"
	},
	{
		"9848465412312321654864621354354834321685495464654"
		"6846465463516516844684684684684684684684684684654"
		"5241321321384654635213213546465241646456321354546"
		"8456465468468465465241321638343541321354583453543"
		"5413545343269848465412312321654864621354354834321"
		"6854954646546846465463516516844684684684684684684"
		"6846846846545241321321384654635213213546465241646"
		"4563213545468456465468468465465241321638343541321"
		"354583453543541354534326",
		"9999999999999999999999999999999999999999999999999"
		"9999999999999999999999999999999999999999999999955"
		"5555555555555587545844444445421245484845454568798"
		"7987654652321546546879546546213415484987456462131"
		"3216549684659999999999999999999999999999999999999"
		"9999999999998454545413574864351354864354354199999"
		"9999999999555555555555555587545844444445421245484"
		"8454545687987987654652321546546879546546213415484"
		"987456462131321654968465",
		"1984846541231232165486462135435483432168549546465"
		"4684646546351651684468468468468468468468468468461"
		"0079687687694024218105765799188648713130177592334"
		"5644412012079001201212086818455695680634203991567"
		"4863009502792984846541231232165486462135435483432"
		"1685495464654530101087709138119603954903903888468"
		"4684684684610079687687694024218105765799188648713"
		"1301775923345644412012079001201212086818455695680"
		"6342039915674863009502791"
	}
};

std::vector<std::vector<std::string> > multTestCases =
{
	{
		"12",
		"13",
		"156"
	},
	{
		"-12",
		"13",
		"-156"
	},
	{
		"-868",
		"-947",
		"821996"
	},
	{
		"0",
		"0",
		"0"
	},
	{
		"0",
		"999",
		"0"
	},
	{
		"9999",
		"999",
		"9989001"
	},
	{
		"9848465412312321654864621354354834321685495464654"
		"6846465463516516844684684684684684684684684684654"
		"5241321321384654635213213546465241646456321354546"
		"8456465468468465465241321638343541321354583453543"
		"5413545343269848465412312321654864621354354834321"
		"6854954646546846465463516516844684684684684684684"
		"6846846846545241321321384654635213213546465241646"
		"4563213545468456465468468465465241321638343541321"
		"354583453543541354534326",
		"9999999999999999999999999999999999999999999999999"
		"9999999999999999999999999999999999999999999999955"
		"5555555555555587545844444445421245484845454568798"
		"7987654652321546546879546546213415484987456462131"
		"3216549684659999999999999999999999999999999999999"
		"9999999999998454545413574864351354864354354199999"
		"9999999999555555555555555587545844444445421245484"
		"8454545687987987654652321546546879546546213415484"
		"987456462131321654968465",
		"9848465412312321654864621354354834321685495464654"
		"6846465463516516844684684684684684684684684684610"
		"7531747440837057035644296341796156346275217350499"
		"3832229427483241886433538417567550536066505800331"
		"4130502252839429313301567420826914563334238434584"
		"4528750068263387519842192180986277879877667420808"
		"4668245965105021074158029020622868250939415070245"
		"6290300155393522976598674623276560255205885270873"
		"8291853765149169817775364923420384239334313248646"
		"6776959732112988848880349941246183401657305120319"
		"2054258828089803131928536685835580487153927441856"
		"6904523962672421074258740991554697504688402643242"
		"5969699093116482250820515182215818435342572494984"
		"2351411987046978123729485315053458633400191804725"
		"9931635271240124431466851981732809539196508863295"
		"1903402179020928334823678882947608341300807526313"
		"307012516525808652188973885545505868014290029590"
	}
};

std::vector<std::vector<int> > addTestCasesInt =
{
	{
		12,
		13,
		25
	},
	{
		-12,
		13,
		1
	},
	{
		-868,
		-947,
		-1815
	},
	{
		0,
		0,
		0
	},
	{
		0,
		999,
		999
	},
	{
		-200000,
		99,
		-199901
	},
	{
		-234560,
		234560,
		0
	}
};

std::vector<std::vector<int> > multTestCasesInt =
{
	{
		12,
		13,
		156
	},
	{
		-12,
		13,
		-156
	},
	{
		-868,
		-947,
		821996
	},
	{
		0,
		0,
		0
	},
	{
		0,
		999,
		0
	},
	{
		9999,
		999,
		9989001
	}
};

bool TEST_ADD(const std::vector<std::string>& testCase) {
	HugeInt a(testCase[0]);
	HugeInt b(testCase[1]);
	HugeInt c(testCase[2]);

	std::cout << a << " + " << b << " = " << a + b << std::endl;

	return (a + b) == c;
}

bool TEST_ADD(const std::vector<int>& testCase) {
	HugeInt a(testCase[0]);
	HugeInt b(testCase[1]);
	HugeInt c(testCase[2]);

	std::cout << a << " + " << b << " = " << a + b << std::endl;

	return (a + b) == c;
}

bool TEST_MULT(const std::vector<std::string>& testCase) {
	HugeInt a(testCase[0]);
	HugeInt b(testCase[1]);
	HugeInt c(testCase[2]);

	std::cout << a << " * " << b << " = " << a * b << std::endl;

	return (a * b) == c;
}

bool TEST_MULT(const std::vector<int>& testCase) {
	HugeInt a(testCase[0]);
	HugeInt b(testCase[1]);
	HugeInt c(testCase[2]);

	std::cout << a << " * " << b << " = " << a * b << std::endl;

	return (a * b) == c;
}

int main() {

	for (const auto& item: addTestCases) {
		if (!TEST_ADD(item)) {
			std::cout << "Addition tests were failed" << std::endl;
			return 1;
		}
	}

	for (const auto& item: multTestCases) {
		if (!TEST_MULT(item)) {
			std::cout << "Multiplication tests were failed" << std::endl;
			return 1;
		}
	}

	for (const auto& item: addTestCasesInt) {
		if (!TEST_ADD(item)) {
			std::cout << "Addition tests were failed" << std::endl;
			return 1;
		}
	}

	for (const auto& item: multTestCasesInt) {
		if (!TEST_MULT(item)) {
			std::cout << "Multiplication tests were failed" << std::endl;
			return 1;
		}
	}

	std::cout << "All Tests were passed successfully" << std::endl;

	return 0;
}
